1. 字典如何进行快速排序：
   a = {"cats":1,"dogs":0}
   如果想要获得b = ["dogs","cats"]，即根据标签的大小顺序获得key的列表，方法如下：
   b=[m[0] for m in sorted(a.items(),key=lambda x:x[1])]
   这里面的key选择的是x的第二项作为参考
   
2.ImageDataGenerator在flow或者flow_from_directory之后，可以调用class_indices来查看对应的文件名和标签的字典：
  例如：
  a = ImageGenerator()
  b = a.flow_from_directory()
  b.class_indices 不带括号，获取的是一个字典{“cats":1,"dogs":0}
  b.samples返回有多少个样本
  在循环里面用：
  for i in range(b.samples):
      x,y=b.next()
   这样可以每次返回一个生成器增强后的图片以及标签
   
3. keras的model函数，model.summary()函数，可以打印出模型信息
   model.get_weights()返回模型权重列表，类型是ndarray

4. 神经网络中BN的用法，一般用在conv或者dense之前，主要作用是加快训练速度，不用也可以

5. keras.layers.concatenate()函数，主要用于共享层模型，例如：
   a. 同一个输入，经过不同的网络提取特征，dense1,dense2,dense3,然后进行拼接dense = concatenate([dense1,dense2,dense3]),
      最后再加上top层，例如全链接，这样的好处是增加了特征的可解释性。
   b. 多个输入的情况，经过相同或者不同的网络提取特征知乎，进行拼接，然后再连接top层，例如：当输入的是两张图像或者是两种不同类型的数据的时候。
   另外没有用到concatenate()函数，但是也是共享层模型的例子：同一个输入多个输出的模型，用来做两个类型的分类等。
   
 
   
